{"filter":false,"title":"babel.config.js","tooltip":"/OurWarmTown/babel.config.js","undoManager":{"mark":4,"position":4,"stack":[[{"start":{"row":0,"column":0},"end":{"row":82,"column":0},"action":"remove","lines":["module.exports = function(api) {","  var validEnv = ['development', 'test', 'production']","  var currentEnv = api.env()","  var isDevelopmentEnv = api.env('development')","  var isProductionEnv = api.env('production')","  var isTestEnv = api.env('test')","","  if (!validEnv.includes(currentEnv)) {","    throw new Error(","      'Please specify a valid `NODE_ENV` or ' +","        '`BABEL_ENV` environment variables. Valid values are \"development\", ' +","        '\"test\", and \"production\". Instead, received: ' +","        JSON.stringify(currentEnv) +","        '.'","    )","  }","","  return {","    presets: [","      isTestEnv && [","        '@babel/preset-env',","        {","          targets: {","            node: 'current'","          }","        }","      ],","      (isProductionEnv || isDevelopmentEnv) && [","        '@babel/preset-env',","        {","          forceAllTransforms: true,","          useBuiltIns: 'entry',","          corejs: 3,","          modules: false,","          exclude: ['transform-typeof-symbol']","        }","      ]","    ].filter(Boolean),","    plugins: [","      'babel-plugin-macros',","      '@babel/plugin-syntax-dynamic-import',","      isTestEnv && 'babel-plugin-dynamic-import-node',","      '@babel/plugin-transform-destructuring',","      [","        '@babel/plugin-proposal-class-properties',","        {","          loose: true","        }","      ],","      [","        '@babel/plugin-proposal-object-rest-spread',","        {","          useBuiltIns: true","        }","      ],","      [","        '@babel/plugin-proposal-private-methods',","        {","          loose: true","        }","      ],","      [","        '@babel/plugin-proposal-private-property-in-object',","        {","          loose: true","        }","      ],","      [","        '@babel/plugin-transform-runtime',","        {","          helpers: false","        }","      ],","      [","        '@babel/plugin-transform-regenerator',","        {","          async: false","        }","      ]","    ].filter(Boolean)","  }","}",""],"id":2}],[{"start":{"row":0,"column":0},"end":{"row":88,"column":0},"action":"insert","lines":["module.exports = function(api) {","  var validEnv = ['development', 'test', 'production']","  var currentEnv = api.env()","  var isDevelopmentEnv = api.env('development')","  var isProductionEnv = api.env('production')","  var isTestEnv = api.env('test')","","  if (!validEnv.includes(currentEnv)) {","    throw new Error(","      'Please specify a valid `NODE_ENV` or ' +","        '`BABEL_ENV` environment variables. Valid values are \"development\", ' +","        '\"test\", and \"production\". Instead, received: ' +","        JSON.stringify(currentEnv) +","        '.'","    )","  }","","  return {","    presets: [","      isTestEnv && [","        '@babel/preset-env',","        {","          targets: {","            node: 'current'","          }","        }","      ],","      (isProductionEnv || isDevelopmentEnv) && [","        '@babel/preset-env',","        {","          forceAllTransforms: true,","          useBuiltIns: 'entry',","          corejs: 3,","          modules: false,","          exclude: ['transform-typeof-symbol']","        }","      ]","    ].filter(Boolean),","    plugins: [","      'babel-plugin-macros',","      '@babel/plugin-syntax-dynamic-import',","      isTestEnv && 'babel-plugin-dynamic-import-node',","      '@babel/plugin-transform-destructuring',","      [","        '@babel/plugin-proposal-class-properties',","        {","          loose: true","        }","      ],","      [","        '@babel/plugin-proposal-object-rest-spread',","        {","          useBuiltIns: true","        }","      ],","      [","        '@babel/plugin-proposal-private-methods',","        {","          loose: true","        }","      ],","      [","        '@babel/plugin-proposal-private-property-in-object',","        {","          loose: true","        }","      ],","      [","        '@babel/plugin-transform-runtime',","        {","          helpers: false","        }","      ],","      [","        '@babel/plugin-transform-regenerator',","        {","          async: false","        }","      ],","      [","        '@babel/plugin-transform-private-methods',","        {","          loose: true","        }","      ]","    ].filter(Boolean)","  }","}",""],"id":3}],[{"start":{"row":0,"column":0},"end":{"row":88,"column":0},"action":"remove","lines":["module.exports = function(api) {","  var validEnv = ['development', 'test', 'production']","  var currentEnv = api.env()","  var isDevelopmentEnv = api.env('development')","  var isProductionEnv = api.env('production')","  var isTestEnv = api.env('test')","","  if (!validEnv.includes(currentEnv)) {","    throw new Error(","      'Please specify a valid `NODE_ENV` or ' +","        '`BABEL_ENV` environment variables. Valid values are \"development\", ' +","        '\"test\", and \"production\". Instead, received: ' +","        JSON.stringify(currentEnv) +","        '.'","    )","  }","","  return {","    presets: [","      isTestEnv && [","        '@babel/preset-env',","        {","          targets: {","            node: 'current'","          }","        }","      ],","      (isProductionEnv || isDevelopmentEnv) && [","        '@babel/preset-env',","        {","          forceAllTransforms: true,","          useBuiltIns: 'entry',","          corejs: 3,","          modules: false,","          exclude: ['transform-typeof-symbol']","        }","      ]","    ].filter(Boolean),","    plugins: [","      'babel-plugin-macros',","      '@babel/plugin-syntax-dynamic-import',","      isTestEnv && 'babel-plugin-dynamic-import-node',","      '@babel/plugin-transform-destructuring',","      [","        '@babel/plugin-proposal-class-properties',","        {","          loose: true","        }","      ],","      [","        '@babel/plugin-proposal-object-rest-spread',","        {","          useBuiltIns: true","        }","      ],","      [","        '@babel/plugin-proposal-private-methods',","        {","          loose: true","        }","      ],","      [","        '@babel/plugin-proposal-private-property-in-object',","        {","          loose: true","        }","      ],","      [","        '@babel/plugin-transform-runtime',","        {","          helpers: false","        }","      ],","      [","        '@babel/plugin-transform-regenerator',","        {","          async: false","        }","      ],","      [","        '@babel/plugin-transform-private-methods',","        {","          loose: true","        }","      ]","    ].filter(Boolean)","  }","}",""],"id":7}],[{"start":{"row":0,"column":0},"end":{"row":82,"column":0},"action":"insert","lines":["module.exports = function(api) {","  var validEnv = ['development', 'test', 'production']","  var currentEnv = api.env()","  var isDevelopmentEnv = api.env('development')","  var isProductionEnv = api.env('production')","  var isTestEnv = api.env('test')","","  if (!validEnv.includes(currentEnv)) {","    throw new Error(","      'Please specify a valid `NODE_ENV` or ' +","        '`BABEL_ENV` environment variables. Valid values are \"development\", ' +","        '\"test\", and \"production\". Instead, received: ' +","        JSON.stringify(currentEnv) +","        '.'","    )","  }","","  return {","    presets: [","      isTestEnv && [","        '@babel/preset-env',","        {","          targets: {","            node: 'current'","          }","        }","      ],","      (isProductionEnv || isDevelopmentEnv) && [","        '@babel/preset-env',","        {","          forceAllTransforms: true,","          useBuiltIns: 'entry',","          corejs: 3,","          modules: false,","          exclude: ['transform-typeof-symbol']","        }","      ]","    ].filter(Boolean),","    plugins: [","      'babel-plugin-macros',","      '@babel/plugin-syntax-dynamic-import',","      isTestEnv && 'babel-plugin-dynamic-import-node',","      '@babel/plugin-transform-destructuring',","      [","        '@babel/plugin-proposal-class-properties',","        {","          loose: true","        }","      ],","      [","        '@babel/plugin-proposal-object-rest-spread',","        {","          useBuiltIns: true","        }","      ],","      [","        '@babel/plugin-transform-private-methods',","        {","          loose: true","        }","      ],","      [","        '@babel/plugin-proposal-private-property-in-object',","        {","          loose: true","        }","      ],","      [","        '@babel/plugin-transform-runtime',","        {","          helpers: false","        }","      ],","      [","        '@babel/plugin-transform-regenerator',","        {","          async: false","        }","      ]","    ].filter(Boolean)","  }","}",""],"id":8}],[{"start":{"row":0,"column":0},"end":{"row":82,"column":0},"action":"remove","lines":["module.exports = function(api) {","  var validEnv = ['development', 'test', 'production']","  var currentEnv = api.env()","  var isDevelopmentEnv = api.env('development')","  var isProductionEnv = api.env('production')","  var isTestEnv = api.env('test')","","  if (!validEnv.includes(currentEnv)) {","    throw new Error(","      'Please specify a valid `NODE_ENV` or ' +","        '`BABEL_ENV` environment variables. Valid values are \"development\", ' +","        '\"test\", and \"production\". Instead, received: ' +","        JSON.stringify(currentEnv) +","        '.'","    )","  }","","  return {","    presets: [","      isTestEnv && [","        '@babel/preset-env',","        {","          targets: {","            node: 'current'","          }","        }","      ],","      (isProductionEnv || isDevelopmentEnv) && [","        '@babel/preset-env',","        {","          forceAllTransforms: true,","          useBuiltIns: 'entry',","          corejs: 3,","          modules: false,","          exclude: ['transform-typeof-symbol']","        }","      ]","    ].filter(Boolean),","    plugins: [","      'babel-plugin-macros',","      '@babel/plugin-syntax-dynamic-import',","      isTestEnv && 'babel-plugin-dynamic-import-node',","      '@babel/plugin-transform-destructuring',","      [","        '@babel/plugin-proposal-class-properties',","        {","          loose: true","        }","      ],","      [","        '@babel/plugin-proposal-object-rest-spread',","        {","          useBuiltIns: true","        }","      ],","      [","        '@babel/plugin-transform-private-methods',","        {","          loose: true","        }","      ],","      [","        '@babel/plugin-proposal-private-property-in-object',","        {","          loose: true","        }","      ],","      [","        '@babel/plugin-transform-runtime',","        {","          helpers: false","        }","      ],","      [","        '@babel/plugin-transform-regenerator',","        {","          async: false","        }","      ]","    ].filter(Boolean)","  }","}",""],"id":9},{"start":{"row":0,"column":0},"end":{"row":70,"column":0},"action":"insert","lines":["module.exports = function(api) {","  var validEnv = ['development', 'test', 'production']","  var currentEnv = api.env()","  var isDevelopmentEnv = api.env('development')","  var isProductionEnv = api.env('production')","  var isTestEnv = api.env('test')","","  if (!validEnv.includes(currentEnv)) {","    throw new Error(","      'Please specify a valid `NODE_ENV` or ' +","        '`BABEL_ENV` environment variables. Valid values are \"development\", ' +","        '\"test\", and \"production\". Instead, received: ' +","        JSON.stringify(currentEnv) +","        '.'","    )","  }","","  return {","    presets: [","      isTestEnv && [","        '@babel/preset-env',","        {","          targets: {","            node: 'current'","          }","        }","      ],","      (isProductionEnv || isDevelopmentEnv) && [","        '@babel/preset-env',","        {","          forceAllTransforms: true,","          useBuiltIns: 'entry',","          corejs: 3,","          modules: false,","          exclude: ['transform-typeof-symbol']","        }","      ]","    ].filter(Boolean),","    plugins: [","      'babel-plugin-macros',","      '@babel/plugin-syntax-dynamic-import',","      isTestEnv && 'babel-plugin-dynamic-import-node',","      '@babel/plugin-transform-destructuring',","      [","        '@babel/plugin-proposal-class-properties',","        {","          loose: true","        }","      ],","      [","        '@babel/plugin-proposal-object-rest-spread',","        {","          useBuiltIns: true","        }","      ],","      [","        '@babel/plugin-transform-runtime',","        {","          helpers: false","        }","      ],","      [","        '@babel/plugin-transform-regenerator',","        {","          async: false","        }","      ]","    ].filter(Boolean)","  }","}",""]}]]},"ace":{"folds":[],"scrolltop":816,"scrollleft":0,"selection":{"start":{"row":70,"column":0},"end":{"row":70,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":50,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1718705114566,"hash":"d569bd7ad9cf07ca601d6bb368a9561c9a84197f"}