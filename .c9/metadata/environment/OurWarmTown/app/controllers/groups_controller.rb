{"filter":false,"title":"groups_controller.rb","tooltip":"/OurWarmTown/app/controllers/groups_controller.rb","undoManager":{"mark":87,"position":87,"stack":[[{"start":{"row":0,"column":0},"end":{"row":47,"column":0},"action":"remove","lines":["class GroupsController < ApplicationController","  def new","    @group = Group.new","  end","","  def create","    @group = Group.new(group_params)","    if @group.save","      redirect_to group_path(@group)","    else","      render :new","    end","  end","","  def index","    @groups = Group.all","  end","","  def show","    @group = Group.find(params[:id])","  end","","  def edit","    @group = Group.find(params[:id])","  end","","  def update","    @group = Group.find(params[:id])","    if @group.update(group_params)","      redirect_to group_path(@group)","    else","      render :edit","    end","  end","","  def destroy","    @group = Group.find(params[:id])","    @group.destroy","    redirect_to groups_path","  end","","  private","","  def group_params","    params.require(:group).permit(:name, :description)","  end","end",""],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":51,"column":0},"action":"insert","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:index, :show]","  before_action :set_group, only: [:show, :edit, :update, :destroy]","","  def index","    @groups = Group.all","  end","","  def show","  end","","  def new","    @group = Group.new","  end","","  def create","    @group = Group.new(group_params)","    @group.user = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def group_params","    params.require(:group).permit(:name, :description)","  end","end",""],"id":2}],[{"start":{"row":0,"column":0},"end":{"row":51,"column":0},"action":"remove","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:index, :show]","  before_action :set_group, only: [:show, :edit, :update, :destroy]","","  def index","    @groups = Group.all","  end","","  def show","  end","","  def new","    @group = Group.new","  end","","  def create","    @group = Group.new(group_params)","    @group.user = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def group_params","    params.require(:group).permit(:name, :description)","  end","end",""],"id":3}],[{"start":{"row":0,"column":0},"end":{"row":19,"column":0},"action":"insert","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!","","  def create","    @group = Group.new(group_params)","    @group.user = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  private","","  def group_params","    params.require(:group).permit(:name, :description)","  end","end",""],"id":4}],[{"start":{"row":0,"column":0},"end":{"row":19,"column":0},"action":"remove","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!","","  def create","    @group = Group.new(group_params)","    @group.user = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  private","","  def group_params","    params.require(:group).permit(:name, :description)","  end","end",""],"id":5}],[{"start":{"row":0,"column":0},"end":{"row":51,"column":0},"action":"insert","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy]","","  def index","    @groups = Group.all","  end","","  def show","  end","","  def new","    @group = Group.new","  end","","  def create","    @group = Group.new(group_params)","    @group.user = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def group_params","    params.require(:group).permit(:name, :description)","  end","end",""],"id":6}],[{"start":{"row":50,"column":3},"end":{"row":51,"column":0},"action":"remove","lines":["",""],"id":7}],[{"start":{"row":0,"column":0},"end":{"row":50,"column":3},"action":"remove","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy]","","  def index","    @groups = Group.all","  end","","  def show","  end","","  def new","    @group = Group.new","  end","","  def create","    @group = Group.new(group_params)","    @group.user = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def group_params","    params.require(:group).permit(:name, :description)","  end","end"],"id":11}],[{"start":{"row":0,"column":0},"end":{"row":52,"column":0},"action":"insert","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy]","","  def index","    @groups = Group.all","  end","","  def show","    @posts = @group.posts","  end","","  def new","    @group = Group.new","  end","","  def create","    @group = Group.new(group_params)","    @group.user = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def group_params","    params.require(:group).permit(:name, :description)","  end","end",""],"id":12}],[{"start":{"row":0,"column":0},"end":{"row":52,"column":0},"action":"remove","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy]","","  def index","    @groups = Group.all","  end","","  def show","    @posts = @group.posts","  end","","  def new","    @group = Group.new","  end","","  def create","    @group = Group.new(group_params)","    @group.user = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def group_params","    params.require(:group).permit(:name, :description)","  end","end",""],"id":13}],[{"start":{"row":0,"column":0},"end":{"row":52,"column":0},"action":"insert","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts","  end","","  def new","    @group = Group.new","  end","","  def create","    @group = Group.new(group_params)","    @group.user = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def group_params","    params.require(:group).permit(:name, :description)","  end","end",""],"id":14}],[{"start":{"row":0,"column":0},"end":{"row":52,"column":0},"action":"remove","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts","  end","","  def new","    @group = Group.new","  end","","  def create","    @group = Group.new(group_params)","    @group.user = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def group_params","    params.require(:group).permit(:name, :description)","  end","end",""],"id":15}],[{"start":{"row":0,"column":0},"end":{"row":72,"column":0},"action":"insert","lines":["# app/controllers/groups_controller.rb","class GroupsController < ApplicationController","  before_action :authenticate_user!","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner, only: [:edit, :update, :destroy]","","  def index","    @groups = Group.all","  end","","  def show","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = current_user.owned_groups.build(group_params)","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.users << current_user","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから脱退しました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner","    unless @group.owner == current_user","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description)","  end","end",""],"id":16}],[{"start":{"row":0,"column":0},"end":{"row":72,"column":0},"action":"remove","lines":["# app/controllers/groups_controller.rb","class GroupsController < ApplicationController","  before_action :authenticate_user!","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner, only: [:edit, :update, :destroy]","","  def index","    @groups = Group.all","  end","","  def show","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = current_user.owned_groups.build(group_params)","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.users << current_user","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから脱退しました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner","    unless @group.owner == current_user","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description)","  end","end",""],"id":17}],[{"start":{"row":0,"column":0},"end":{"row":73,"column":0},"action":"insert","lines":["# app/controllers/groups_controller.rb","class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner, only: [:edit, :update, :destroy]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = current_user.owned_groups.build(group_params)","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.users << current_user","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから脱退しました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner","    unless @group.owner == current_user","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description)","  end","end",""],"id":18}],[{"start":{"row":0,"column":0},"end":{"row":73,"column":0},"action":"remove","lines":["# app/controllers/groups_controller.rb","class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner, only: [:edit, :update, :destroy]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = current_user.owned_groups.build(group_params)","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.users << current_user","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから脱退しました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner","    unless @group.owner == current_user","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description)","  end","end",""],"id":19}],[{"start":{"row":0,"column":0},"end":{"row":74,"column":0},"action":"insert","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner, only: [:edit, :update, :destroy]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts","    @is_owner = @group.user == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = current_user.owned_groups.build(group_params)","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.users << current_user","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから脱退しました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner","    unless @group.user == current_user","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description)","  end","end",""],"id":20}],[{"start":{"row":0,"column":0},"end":{"row":74,"column":0},"action":"remove","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner, only: [:edit, :update, :destroy]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts","    @is_owner = @group.user == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = current_user.owned_groups.build(group_params)","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.users << current_user","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから脱退しました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner","    unless @group.user == current_user","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description)","  end","end",""],"id":21}],[{"start":{"row":0,"column":0},"end":{"row":74,"column":0},"action":"insert","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner, only: [:edit, :update, :destroy]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts","    @is_owner = @group.user == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = current_user.owned_groups.build(group_params)","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.users << current_user","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから脱退しました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner","    unless @group.user == current_user","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description)","  end","end",""],"id":22}],[{"start":{"row":0,"column":0},"end":{"row":74,"column":0},"action":"remove","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner, only: [:edit, :update, :destroy]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts","    @is_owner = @group.user == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = current_user.owned_groups.build(group_params)","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.users << current_user","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから脱退しました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner","    unless @group.user == current_user","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description)","  end","end",""],"id":23}],[{"start":{"row":0,"column":0},"end":{"row":74,"column":0},"action":"insert","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner, only: [:edit, :update, :destroy]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = current_user.owned_groups.build(group_params)","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.users << current_user","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから脱退しました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner","    unless @group.owner == current_user","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description)","  end","end",""],"id":24}],[{"start":{"row":0,"column":0},"end":{"row":74,"column":0},"action":"remove","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner, only: [:edit, :update, :destroy]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = current_user.owned_groups.build(group_params)","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.users << current_user","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから脱退しました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner","    unless @group.owner == current_user","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description)","  end","end",""],"id":25}],[{"start":{"row":0,"column":0},"end":{"row":74,"column":0},"action":"insert","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner, only: [:edit, :update, :destroy]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = current_user.owned_groups.build(group_params)","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.users << current_user","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから脱退しました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner","    unless @group.owner == current_user","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description)","  end","end",""],"id":26}],[{"start":{"row":0,"column":0},"end":{"row":74,"column":0},"action":"remove","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner, only: [:edit, :update, :destroy]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = current_user.owned_groups.build(group_params)","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.users << current_user","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから脱退しました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner","    unless @group.owner == current_user","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description)","  end","end",""],"id":27}],[{"start":{"row":0,"column":0},"end":{"row":74,"column":0},"action":"insert","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner, only: [:edit, :update, :destroy]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = current_user.owned_groups.build(group_params)","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.users << current_user","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから脱退しました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner","    unless @group.owner == current_user","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":28}],[{"start":{"row":0,"column":0},"end":{"row":74,"column":0},"action":"remove","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner, only: [:edit, :update, :destroy]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = current_user.owned_groups.build(group_params)","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.users << current_user","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから脱退しました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner","    unless @group.owner == current_user","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":29}],[{"start":{"row":0,"column":0},"end":{"row":75,"column":0},"action":"insert","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner, only: [:edit, :update, :destroy]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.users << current_user","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから脱退しました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner","    unless @group.owner == current_user","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":30}],[{"start":{"row":0,"column":0},"end":{"row":75,"column":0},"action":"remove","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner, only: [:edit, :update, :destroy]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.users << current_user","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから脱退しました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner","    unless @group.owner == current_user","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":33}],[{"start":{"row":0,"column":0},"end":{"row":75,"column":0},"action":"insert","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner, only: [:edit, :update, :destroy]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.users << current_user","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから脱退しました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner","    unless @group.owner == current_user","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":34}],[{"start":{"row":0,"column":0},"end":{"row":75,"column":0},"action":"remove","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner, only: [:edit, :update, :destroy]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.users << current_user","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから脱退しました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner","    unless @group.owner == current_user","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":35}],[{"start":{"row":0,"column":0},"end":{"row":82,"column":0},"action":"insert","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.users << current_user","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから脱退しました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner","    unless @group.owner == current_user","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":36}],[{"start":{"row":56,"column":46},"end":{"row":56,"column":47},"action":"remove","lines":["た"],"id":37},{"start":{"row":56,"column":45},"end":{"row":56,"column":46},"action":"remove","lines":["し"]},{"start":{"row":56,"column":44},"end":{"row":56,"column":45},"action":"remove","lines":["ま"]},{"start":{"row":56,"column":43},"end":{"row":56,"column":44},"action":"remove","lines":["し"]},{"start":{"row":56,"column":42},"end":{"row":56,"column":43},"action":"remove","lines":["退"]},{"start":{"row":56,"column":41},"end":{"row":56,"column":42},"action":"remove","lines":["脱"]}],[{"start":{"row":56,"column":41},"end":{"row":56,"column":46},"action":"insert","lines":["外れました"],"id":38}],[{"start":{"row":0,"column":0},"end":{"row":82,"column":0},"action":"remove","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.users << current_user","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner","    unless @group.owner == current_user","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":39}],[{"start":{"row":0,"column":0},"end":{"row":82,"column":0},"action":"insert","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.users << current_user","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":40}],[{"start":{"row":0,"column":0},"end":{"row":82,"column":0},"action":"remove","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.users << current_user","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":41}],[{"start":{"row":0,"column":0},"end":{"row":82,"column":0},"action":"insert","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.users << current_user","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":42}],[{"start":{"row":0,"column":0},"end":{"row":82,"column":0},"action":"remove","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.users << current_user","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":43}],[{"start":{"row":0,"column":0},"end":{"row":82,"column":0},"action":"insert","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.users << current_user","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":44}],[{"start":{"row":0,"column":0},"end":{"row":82,"column":0},"action":"remove","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.users << current_user","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":45}],[{"start":{"row":0,"column":0},"end":{"row":82,"column":0},"action":"insert","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.user_groups.create(user: current_user, joined_at: Time.current)","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":46}],[{"start":{"row":0,"column":0},"end":{"row":82,"column":0},"action":"remove","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.user_groups.create(user: current_user, joined_at: Time.current)","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":47}],[{"start":{"row":0,"column":0},"end":{"row":82,"column":0},"action":"insert","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = Post.where(user_id: @group.users.pluck(:id)).order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.user_groups.create(user: current_user, joined_at: Time.current)","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":48}],[{"start":{"row":11,"column":4},"end":{"row":13,"column":52},"action":"remove","lines":["@group_posts = Post.where(user_id: @group.users.pluck(:id)).order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)"],"id":53}],[{"start":{"row":11,"column":4},"end":{"row":14,"column":18},"action":"insert","lines":[" @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","  @is_owner = @group.owner == current_user","  @is_member = @group.users.include?(current_user)","  @post = Post.new"],"id":54}],[{"start":{"row":12,"column":0},"end":{"row":12,"column":2},"action":"insert","lines":["  "],"id":55},{"start":{"row":13,"column":0},"end":{"row":13,"column":2},"action":"insert","lines":["  "]},{"start":{"row":14,"column":0},"end":{"row":14,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":11,"column":4},"end":{"row":11,"column":5},"action":"remove","lines":[" "],"id":56}],[{"start":{"row":0,"column":0},"end":{"row":83,"column":0},"action":"remove","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","    @post = Post.new","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.user_groups.create(user: current_user, joined_at: Time.current)","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":57}],[{"start":{"row":0,"column":0},"end":{"row":84,"column":0},"action":"insert","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    # グループに属する全てのメンバーの投稿を取得","    @group_posts = Post.joins(:user).where(users: { id: @group.users.pluck(:id) }).order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","    @post = Post.new","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.user_groups.create(user: current_user, joined_at: Time.current)","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":58}],[{"start":{"row":11,"column":4},"end":{"row":11,"column":27},"action":"remove","lines":["# グループに属する全てのメンバーの投稿を取得"],"id":59},{"start":{"row":11,"column":2},"end":{"row":11,"column":4},"action":"remove","lines":["  "]},{"start":{"row":11,"column":0},"end":{"row":11,"column":2},"action":"remove","lines":["  "]},{"start":{"row":10,"column":10},"end":{"row":11,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":83,"column":0},"action":"remove","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = Post.joins(:user).where(users: { id: @group.users.pluck(:id) }).order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","    @post = Post.new","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.user_groups.create(user: current_user, joined_at: Time.current)","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":60}],[{"start":{"row":0,"column":0},"end":{"row":84,"column":0},"action":"insert","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    # このグループに属する投稿のみを取得","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","    @post = Post.new","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.user_groups.create(user: current_user, joined_at: Time.current)","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":61}],[{"start":{"row":0,"column":0},"end":{"row":84,"column":0},"action":"remove","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    # このグループに属する投稿のみを取得","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","    @post = Post.new","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.user_groups.create(user: current_user, joined_at: Time.current)","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":62}],[{"start":{"row":0,"column":0},"end":{"row":83,"column":0},"action":"insert","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","    @post = @group.posts.build","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.user_groups.create(user: current_user, joined_at: Time.current)","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":63}],[{"start":{"row":0,"column":0},"end":{"row":83,"column":0},"action":"remove","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","    @post = @group.posts.build","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.user_groups.create(user: current_user, joined_at: Time.current)","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":64}],[{"start":{"row":0,"column":0},"end":{"row":81,"column":3},"action":"insert","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.user_groups.create(user: current_user, joined_at: Time.current)","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end"],"id":65}],[{"start":{"row":0,"column":0},"end":{"row":81,"column":3},"action":"remove","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.user_groups.create(user: current_user, joined_at: Time.current)","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end"],"id":66}],[{"start":{"row":0,"column":0},"end":{"row":82,"column":0},"action":"insert","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.user_groups.create(user: current_user, joined_at: Time.current)","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":67}],[{"start":{"row":0,"column":0},"end":{"row":82,"column":0},"action":"remove","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.user_groups.create(user: current_user, joined_at: Time.current)","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":68}],[{"start":{"row":0,"column":0},"end":{"row":82,"column":0},"action":"insert","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.user_groups.create(user: current_user, joined_at: Time.current)","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":69}],[{"start":{"row":41,"column":2},"end":{"row":44,"column":5},"action":"remove","lines":["def destroy","    @group.destroy","    redirect_to groups_url, notice: 'グループが削除されました。'","  end"],"id":70}],[{"start":{"row":41,"column":2},"end":{"row":44,"column":5},"action":"insert","lines":["def destroy","    @group.destroy","    redirect_to root_path, notice: 'グループが削除されました。'","  end"],"id":71}],[{"start":{"row":0,"column":0},"end":{"row":82,"column":0},"action":"remove","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to root_path, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.user_groups.create(user: current_user, joined_at: Time.current)","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":72}],[{"start":{"row":0,"column":0},"end":{"row":82,"column":0},"action":"insert","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to root_path, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.user_groups.create(user: current_user, joined_at: Time.current)","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":73}],[{"start":{"row":0,"column":0},"end":{"row":82,"column":0},"action":"remove","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to root_path, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.user_groups.create(user: current_user, joined_at: Time.current)","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":74}],[{"start":{"row":0,"column":0},"end":{"row":82,"column":0},"action":"insert","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to root_path, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.user_groups.create(user: current_user, joined_at: Time.current)","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":75}],[{"start":{"row":0,"column":0},"end":{"row":82,"column":0},"action":"remove","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to root_path, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.user_groups.create(user: current_user, joined_at: Time.current)","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":76}],[{"start":{"row":0,"column":0},"end":{"row":82,"column":0},"action":"insert","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to root_path, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.user_groups.create(user: current_user, joined_at: Time.current)","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":77}],[{"start":{"row":11,"column":4},"end":{"row":13,"column":52},"action":"remove","lines":["@group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.include?(current_user)"],"id":78}],[{"start":{"row":11,"column":4},"end":{"row":14,"column":54},"action":"insert","lines":["@group = Group.find(params[:id])","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.exists?(current_user.id)"],"id":79}],[{"start":{"row":11,"column":4},"end":{"row":14,"column":54},"action":"remove","lines":["@group = Group.find(params[:id])","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page]).per(6)","    @is_owner = @group.owner == current_user","    @is_member = @group.users.exists?(current_user.id)"],"id":80}],[{"start":{"row":11,"column":4},"end":{"row":14,"column":76},"action":"insert","lines":["@group = Group.find(params[:id])","    @is_owner = current_user == @group.owner","    @is_member = @group.users.exists?(current_user.id)","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page])"],"id":81}],[{"start":{"row":11,"column":4},"end":{"row":14,"column":76},"action":"remove","lines":["@group = Group.find(params[:id])","    @is_owner = current_user == @group.owner","    @is_member = @group.users.exists?(current_user.id)","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page])"],"id":82}],[{"start":{"row":11,"column":4},"end":{"row":13,"column":76},"action":"insert","lines":["@is_owner = current_user == @group.owner","    @is_member = @group.users.exists?(current_user.id)","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page])"],"id":83}],[{"start":{"row":13,"column":76},"end":{"row":14,"column":0},"action":"insert","lines":["",""],"id":84},{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":14,"column":2},"end":{"row":14,"column":4},"action":"remove","lines":["  "],"id":85},{"start":{"row":14,"column":0},"end":{"row":14,"column":2},"action":"remove","lines":["  "]},{"start":{"row":13,"column":76},"end":{"row":14,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":13,"column":76},"end":{"row":14,"column":0},"action":"insert","lines":["",""],"id":86},{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":14,"column":4},"end":{"row":14,"column":5},"action":"insert","lines":["b"],"id":87},{"start":{"row":14,"column":5},"end":{"row":14,"column":6},"action":"insert","lines":["u"]},{"start":{"row":14,"column":6},"end":{"row":14,"column":7},"action":"insert","lines":["y"]}],[{"start":{"row":14,"column":7},"end":{"row":14,"column":8},"action":"insert","lines":["b"],"id":88},{"start":{"row":14,"column":8},"end":{"row":14,"column":9},"action":"insert","lines":["a"]},{"start":{"row":14,"column":9},"end":{"row":14,"column":10},"action":"insert","lines":["g"]}],[{"start":{"row":14,"column":9},"end":{"row":14,"column":10},"action":"remove","lines":["g"],"id":89},{"start":{"row":14,"column":8},"end":{"row":14,"column":9},"action":"remove","lines":["a"]},{"start":{"row":14,"column":7},"end":{"row":14,"column":8},"action":"remove","lines":["b"]},{"start":{"row":14,"column":6},"end":{"row":14,"column":7},"action":"remove","lines":["y"]},{"start":{"row":14,"column":5},"end":{"row":14,"column":6},"action":"remove","lines":["u"]},{"start":{"row":14,"column":4},"end":{"row":14,"column":5},"action":"remove","lines":["b"]},{"start":{"row":14,"column":2},"end":{"row":14,"column":4},"action":"remove","lines":["  "]},{"start":{"row":14,"column":0},"end":{"row":14,"column":2},"action":"remove","lines":["  "]}],[{"start":{"row":13,"column":76},"end":{"row":14,"column":0},"action":"remove","lines":["",""],"id":90}],[{"start":{"row":15,"column":0},"end":{"row":15,"column":1},"action":"insert","lines":[" "],"id":91},{"start":{"row":15,"column":1},"end":{"row":15,"column":2},"action":"insert","lines":[" "]}],[{"start":{"row":15,"column":2},"end":{"row":15,"column":3},"action":"insert","lines":["b"],"id":92},{"start":{"row":15,"column":3},"end":{"row":15,"column":4},"action":"insert","lines":["u"]},{"start":{"row":15,"column":4},"end":{"row":15,"column":5},"action":"insert","lines":["y"]},{"start":{"row":15,"column":5},"end":{"row":15,"column":6},"action":"insert","lines":["b"]}],[{"start":{"row":15,"column":6},"end":{"row":15,"column":7},"action":"insert","lines":["a"],"id":93},{"start":{"row":15,"column":7},"end":{"row":15,"column":8},"action":"insert","lines":["g"]}],[{"start":{"row":15,"column":7},"end":{"row":15,"column":8},"action":"remove","lines":["g"],"id":94},{"start":{"row":15,"column":6},"end":{"row":15,"column":7},"action":"remove","lines":["a"]},{"start":{"row":15,"column":5},"end":{"row":15,"column":6},"action":"remove","lines":["b"]},{"start":{"row":15,"column":4},"end":{"row":15,"column":5},"action":"remove","lines":["y"]},{"start":{"row":15,"column":3},"end":{"row":15,"column":4},"action":"remove","lines":["u"]},{"start":{"row":15,"column":2},"end":{"row":15,"column":3},"action":"remove","lines":["b"]},{"start":{"row":15,"column":0},"end":{"row":15,"column":2},"action":"remove","lines":["  "]},{"start":{"row":14,"column":5},"end":{"row":15,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":14,"column":5},"end":{"row":15,"column":0},"action":"insert","lines":["",""],"id":95},{"start":{"row":15,"column":0},"end":{"row":15,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":0,"column":0},"end":{"row":82,"column":0},"action":"remove","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    @is_owner = current_user == @group.owner","    @is_member = @group.users.exists?(current_user.id)","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page])","  end","  ","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to root_path, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.user_groups.create(user: current_user, joined_at: Time.current)","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":102}],[{"start":{"row":0,"column":0},"end":{"row":87,"column":0},"action":"insert","lines":["class GroupsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_group, only: [:show, :edit, :update, :destroy, :join, :leave]","  before_action :ensure_owner_or_admin, only: [:edit, :update, :destroy]","  before_action :ensure_admin, only: [:manage]","","  def index","    @groups = Group.all","  end","","  def show","    if user_signed_in?","      @is_owner = current_user == @group.owner","      @is_member = @group.users.exists?(current_user.id)","    else","      @is_owner = false","      @is_member = false","    end","    @group_posts = @group.posts.order(created_at: :desc).page(params[:page])","  end","","  def new","    @group = current_user.owned_groups.build","  end","","  def create","    @group = Group.new(group_params)","    @group.owner = current_user","    if @group.save","      redirect_to @group, notice: 'グループが作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @group.update(group_params)","      redirect_to @group, notice: 'グループが更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @group.destroy","    redirect_to root_path, notice: 'グループが削除されました。'","  end","","  def join","    unless @group.users.include?(current_user)","      @group.user_groups.create(user: current_user, joined_at: Time.current)","      redirect_to @group, notice: 'グループに参加しました。'","    end","  end","","  def leave","    if @group.users.include?(current_user)","      @group.users.delete(current_user)","      redirect_to @group, notice: 'グループから外れました。'","    end","  end","","  private","","  def set_group","    @group = Group.find(params[:id])","  end","","  def ensure_owner_or_admin","    unless @group.owner == current_user || current_user.admin?","      redirect_to groups_path, alert: 'グループを編集する権限がありません。'","    end","  end","","  def ensure_admin","    unless current_user.admin?","      redirect_to root_path, alert: '管理者権限が必要です。'","    end","  end","","  def group_params","    params.require(:group).permit(:name, :description, :image)","  end","end",""],"id":103}]]},"ace":{"folds":[],"scrolltop":1062,"scrollleft":0,"selection":{"start":{"row":87,"column":0},"end":{"row":87,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1719415901917,"hash":"b5a329178c761619cd461d52216a13cf0290163b"}