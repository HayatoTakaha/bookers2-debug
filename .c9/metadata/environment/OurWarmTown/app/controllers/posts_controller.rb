{"filter":false,"title":"posts_controller.rb","tooltip":"/OurWarmTown/app/controllers/posts_controller.rb","ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":68,"column":0},"end":{"row":68,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"hash":"a16eb3a2f917343cb06e5c24bf13759eae7c5802","undoManager":{"mark":15,"position":15,"stack":[[{"start":{"row":0,"column":0},"end":{"row":57,"column":0},"action":"remove","lines":["class PostsController < ApplicationController","  before_action :set_post, only: [:show, :edit, :update, :toggle_like]","  before_action :set_group, only: [:new, :create, :edit, :update]","","  def index","    @posts = Post.order(created_at: :desc).page(params[:page]).per(8)","  end","  ","  def show","  end","","  def new","    @post = @group ? @group.posts.build : Post.new","  end","","  def create","    @post = @group ? @group.posts.build(post_params) : Post.new(post_params)","    @post.user = current_user","    if @post.save","      redirect_to @group ? group_path(@group) : post_path(@post), notice: '投稿が作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @post.update(post_params)","      if @group","        redirect_to group_path(@group), notice: '投稿が更新されました。'","      else","        redirect_to post_path(@post), notice: '投稿が更新されました。'","      end","    else","      render :edit","    end","  end","","  private","","  def set_post","    @post = Post.find(params[:id])","  end","","  def set_group","    @group = Group.find(params[:group_id]) if params[:group_id].present?","  rescue ActiveRecord::RecordNotFound","    @group = nil","    redirect_to groups_path, alert: 'グループが見つかりません。' if params[:group_id].present?","  end","","  def post_params","    params.require(:post).permit(:title, :content, :group_id, images: [])","  end","end",""],"id":1961}],[{"start":{"row":0,"column":0},"end":{"row":62,"column":0},"action":"insert","lines":["class PostsController < ApplicationController","  before_action :set_post, only: [:show, :edit, :update, :destroy, :toggle_like]","  before_action :set_group, only: [:new, :create, :edit, :update]","","  def index","    @posts = Post.order(created_at: :desc).page(params[:page]).per(8)","  end","  ","  def show","  end","","  def new","    @post = @group ? @group.posts.build : Post.new","  end","","  def create","    @post = @group ? @group.posts.build(post_params) : Post.new(post_params)","    @post.user = current_user","    if @post.save","      redirect_to @group ? group_path(@group) : post_path(@post), notice: '投稿が作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @post.update(post_params)","      if @group","        redirect_to group_path(@group), notice: '投稿が更新されました。'","      else","        redirect_to post_path(@post), notice: '投稿が更新されました。'","      end","    else","      render :edit","    end","  end","","  def destroy","    @post.destroy","    redirect_to root_path, notice: '投稿が削除されました。'","  end","","  private","","  def set_post","    @post = Post.find(params[:id])","  end","","  def set_group","    @group = Group.find(params[:group_id]) if params[:group_id].present?","  rescue ActiveRecord::RecordNotFound","    @group = nil","    redirect_to groups_path, alert: 'グループが見つかりません。' if params[:group_id].present?","  end","","  def post_params","    params.require(:post).permit(:title, :content, :group_id, images: [])","  end","end",""],"id":1962}],[{"start":{"row":0,"column":0},"end":{"row":62,"column":0},"action":"remove","lines":["class PostsController < ApplicationController","  before_action :set_post, only: [:show, :edit, :update, :destroy, :toggle_like]","  before_action :set_group, only: [:new, :create, :edit, :update]","","  def index","    @posts = Post.order(created_at: :desc).page(params[:page]).per(8)","  end","  ","  def show","  end","","  def new","    @post = @group ? @group.posts.build : Post.new","  end","","  def create","    @post = @group ? @group.posts.build(post_params) : Post.new(post_params)","    @post.user = current_user","    if @post.save","      redirect_to @group ? group_path(@group) : post_path(@post), notice: '投稿が作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @post.update(post_params)","      if @group","        redirect_to group_path(@group), notice: '投稿が更新されました。'","      else","        redirect_to post_path(@post), notice: '投稿が更新されました。'","      end","    else","      render :edit","    end","  end","","  def destroy","    @post.destroy","    redirect_to root_path, notice: '投稿が削除されました。'","  end","","  private","","  def set_post","    @post = Post.find(params[:id])","  end","","  def set_group","    @group = Group.find(params[:group_id]) if params[:group_id].present?","  rescue ActiveRecord::RecordNotFound","    @group = nil","    redirect_to groups_path, alert: 'グループが見つかりません。' if params[:group_id].present?","  end","","  def post_params","    params.require(:post).permit(:title, :content, :group_id, images: [])","  end","end",""],"id":1963}],[{"start":{"row":0,"column":0},"end":{"row":62,"column":0},"action":"insert","lines":["class PostsController < ApplicationController","  before_action :set_post, only: [:show, :edit, :update, :destroy, :toggle_like]","  before_action :set_group, only: [:new, :create, :edit, :update]","","  def index","    @posts = current_user.posts.order(created_at: :desc).page(params[:page]).per(8)","  end","  ","  def show","  end","","  def new","    @post = @group ? @group.posts.build : Post.new","  end","","  def create","    @post = @group ? @group.posts.build(post_params) : Post.new(post_params)","    @post.user = current_user","    if @post.save","      redirect_to @group ? group_path(@group) : post_path(@post), notice: '投稿が作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @post.update(post_params)","      if @group","        redirect_to group_path(@group), notice: '投稿が更新されました。'","      else","        redirect_to post_path(@post), notice: '投稿が更新されました。'","      end","    else","      render :edit","    end","  end","","  def destroy","    @post.destroy","    redirect_to root_path, notice: '投稿が削除されました。'","  end","","  private","","  def set_post","    @post = Post.find(params[:id])","  end","","  def set_group","    @group = Group.find(params[:group_id]) if params[:group_id].present?","  rescue ActiveRecord::RecordNotFound","    @group = nil","    redirect_to groups_path, alert: 'グループが見つかりません。' if params[:group_id].present?","  end","","  def post_params","    params.require(:post).permit(:title, :content, :group_id, images: [])","  end","end",""],"id":1964}],[{"start":{"row":0,"column":0},"end":{"row":62,"column":0},"action":"remove","lines":["class PostsController < ApplicationController","  before_action :set_post, only: [:show, :edit, :update, :destroy, :toggle_like]","  before_action :set_group, only: [:new, :create, :edit, :update]","","  def index","    @posts = current_user.posts.order(created_at: :desc).page(params[:page]).per(8)","  end","  ","  def show","  end","","  def new","    @post = @group ? @group.posts.build : Post.new","  end","","  def create","    @post = @group ? @group.posts.build(post_params) : Post.new(post_params)","    @post.user = current_user","    if @post.save","      redirect_to @group ? group_path(@group) : post_path(@post), notice: '投稿が作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @post.update(post_params)","      if @group","        redirect_to group_path(@group), notice: '投稿が更新されました。'","      else","        redirect_to post_path(@post), notice: '投稿が更新されました。'","      end","    else","      render :edit","    end","  end","","  def destroy","    @post.destroy","    redirect_to root_path, notice: '投稿が削除されました。'","  end","","  private","","  def set_post","    @post = Post.find(params[:id])","  end","","  def set_group","    @group = Group.find(params[:group_id]) if params[:group_id].present?","  rescue ActiveRecord::RecordNotFound","    @group = nil","    redirect_to groups_path, alert: 'グループが見つかりません。' if params[:group_id].present?","  end","","  def post_params","    params.require(:post).permit(:title, :content, :group_id, images: [])","  end","end",""],"id":1965}],[{"start":{"row":0,"column":0},"end":{"row":58,"column":0},"action":"insert","lines":["class PostsController < ApplicationController","  before_action :set_post, only: [:show, :edit, :update, :destroy, :toggle_like]","  before_action :set_group, only: [:new, :create, :edit, :update]","","  def index","    @posts = current_user.posts.order(created_at: :desc).page(params[:page]).per(8)","  end","  ","  def show","  end","","  def new","    @post = @group ? @group.posts.build : Post.new","  end","","  def create","    @post = @group ? @group.posts.build(post_params) : Post.new(post_params)","    @post.user = current_user","    if @post.save","      redirect_to @group ? group_path(@group) : post_path(@post), notice: '投稿が作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @post.update(post_params)","      redirect_to @group ? group_path(@group) : post_path(@post), notice: '投稿が更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @post.destroy","    redirect_to root_path, notice: '投稿が削除されました。'","  end","","  private","","  def set_post","    @post = Post.find(params[:id])","  rescue ActiveRecord::RecordNotFound","    redirect_to posts_path, alert: '投稿が見つかりません。'","  end","","  def set_group","    @group = Group.find_by(id: params[:group_id])","    redirect_to groups_path, alert: 'グループが見つかりません。' if params[:group_id].present? && @group.nil?","  end","","  def post_params","    params.require(:post).permit(:title, :content, :group_id, images: [])","  end","end",""],"id":1966}],[{"start":{"row":0,"column":0},"end":{"row":58,"column":0},"action":"remove","lines":["class PostsController < ApplicationController","  before_action :set_post, only: [:show, :edit, :update, :destroy, :toggle_like]","  before_action :set_group, only: [:new, :create, :edit, :update]","","  def index","    @posts = current_user.posts.order(created_at: :desc).page(params[:page]).per(8)","  end","  ","  def show","  end","","  def new","    @post = @group ? @group.posts.build : Post.new","  end","","  def create","    @post = @group ? @group.posts.build(post_params) : Post.new(post_params)","    @post.user = current_user","    if @post.save","      redirect_to @group ? group_path(@group) : post_path(@post), notice: '投稿が作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @post.update(post_params)","      redirect_to @group ? group_path(@group) : post_path(@post), notice: '投稿が更新されました。'","    else","      render :edit","    end","  end","","  def destroy","    @post.destroy","    redirect_to root_path, notice: '投稿が削除されました。'","  end","","  private","","  def set_post","    @post = Post.find(params[:id])","  rescue ActiveRecord::RecordNotFound","    redirect_to posts_path, alert: '投稿が見つかりません。'","  end","","  def set_group","    @group = Group.find_by(id: params[:group_id])","    redirect_to groups_path, alert: 'グループが見つかりません。' if params[:group_id].present? && @group.nil?","  end","","  def post_params","    params.require(:post).permit(:title, :content, :group_id, images: [])","  end","end",""],"id":1967}],[{"start":{"row":0,"column":0},"end":{"row":67,"column":0},"action":"insert","lines":["class PostsController < ApplicationController","  before_action :set_post, only: [:show, :edit, :update, :destroy, :toggle_like]","  before_action :set_group, only: [:new, :create, :edit, :update]","  before_action :set_current_user_posts, only: [:index, :mypage]","","  def index","    @posts = @user_posts.order(created_at: :desc).page(params[:page]).per(8)","  end","","  def show","  end","","  def new","    @post = @group ? @group.posts.build : Post.new","  end","","  def create","    @post = @group ? @group.posts.build(post_params) : Post.new(post_params)","    @post.user = current_user","    if @post.save","      redirect_to @group ? group_path(@group) : post_path(@post), notice: '投稿が作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @post.update(post_params)","      if @group","        redirect_to group_path(@group), notice: '投稿が更新されました。'","      else","        redirect_to post_path(@post), notice: '投稿が更新されました。'","      end","    else","      render :edit","    end","  end","","  def destroy","    @post.destroy","    redirect_to root_path, notice: '投稿が削除されました。'","  end","","  private","","  def set_post","    @post = Post.find(params[:id])","  end","","  def set_group","    @group = Group.find(params[:group_id]) if params[:group_id].present?","  rescue ActiveRecord::RecordNotFound","    @group = nil","    redirect_to groups_path, alert: 'グループが見つかりません。' if params[:group_id].present?","  end","","  def post_params","    params.require(:post).permit(:title, :content, :group_id, images: [])","  end","","  def set_current_user_posts","    @user_posts = current_user.posts","  end","end",""],"id":1968}],[{"start":{"row":0,"column":0},"end":{"row":67,"column":0},"action":"remove","lines":["class PostsController < ApplicationController","  before_action :set_post, only: [:show, :edit, :update, :destroy, :toggle_like]","  before_action :set_group, only: [:new, :create, :edit, :update]","  before_action :set_current_user_posts, only: [:index, :mypage]","","  def index","    @posts = @user_posts.order(created_at: :desc).page(params[:page]).per(8)","  end","","  def show","  end","","  def new","    @post = @group ? @group.posts.build : Post.new","  end","","  def create","    @post = @group ? @group.posts.build(post_params) : Post.new(post_params)","    @post.user = current_user","    if @post.save","      redirect_to @group ? group_path(@group) : post_path(@post), notice: '投稿が作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @post.update(post_params)","      if @group","        redirect_to group_path(@group), notice: '投稿が更新されました。'","      else","        redirect_to post_path(@post), notice: '投稿が更新されました。'","      end","    else","      render :edit","    end","  end","","  def destroy","    @post.destroy","    redirect_to root_path, notice: '投稿が削除されました。'","  end","","  private","","  def set_post","    @post = Post.find(params[:id])","  end","","  def set_group","    @group = Group.find(params[:group_id]) if params[:group_id].present?","  rescue ActiveRecord::RecordNotFound","    @group = nil","    redirect_to groups_path, alert: 'グループが見つかりません。' if params[:group_id].present?","  end","","  def post_params","    params.require(:post).permit(:title, :content, :group_id, images: [])","  end","","  def set_current_user_posts","    @user_posts = current_user.posts","  end","end",""],"id":1969}],[{"start":{"row":0,"column":0},"end":{"row":64,"column":0},"action":"insert","lines":["class PostsController < ApplicationController","  before_action :set_post, only: [:show, :edit, :update, :destroy, :toggle_like]","  before_action :set_group, only: [:new, :create, :edit, :update]","","  def index","    @posts = current_user.posts.order(created_at: :desc).page(params[:page]).per(8)","  end","  ","  def show","  end","","  def new","    @post = @group ? @group.posts.build : Post.new","  end","","  def create","    @post = @group ? @group.posts.build(post_params) : Post.new(post_params)","    @post.user = current_user","    if @post.save","      redirect_to @group ? group_path(@group) : post_path(@post), notice: '投稿が作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @post.update(post_params)","      if @group","        redirect_to group_path(@group), notice: '投稿が更新されました。'","      else","        redirect_to post_path(@post), notice: '投稿が更新されました。'","      end","    else","      render :edit","    end","  end","","  def destroy","    @post.destroy","    redirect_to root_path, notice: '投稿が削除されました。'","  end","","  private","","  def set_post","    @post = Post.find(params[:id])","  rescue ActiveRecord::RecordNotFound","    redirect_to root_path, alert: '投稿が見つかりませんでした。'","  end","","  def set_group","    @group = Group.find(params[:group_id]) if params[:group_id].present?","  rescue ActiveRecord::RecordNotFound","    @group = nil","    redirect_to groups_path, alert: 'グループが見つかりません。' if params[:group_id].present?","  end","","  def post_params","    params.require(:post).permit(:title, :content, :group_id, images: [])","  end","end",""],"id":1970}],[{"start":{"row":0,"column":0},"end":{"row":64,"column":0},"action":"remove","lines":["class PostsController < ApplicationController","  before_action :set_post, only: [:show, :edit, :update, :destroy, :toggle_like]","  before_action :set_group, only: [:new, :create, :edit, :update]","","  def index","    @posts = current_user.posts.order(created_at: :desc).page(params[:page]).per(8)","  end","  ","  def show","  end","","  def new","    @post = @group ? @group.posts.build : Post.new","  end","","  def create","    @post = @group ? @group.posts.build(post_params) : Post.new(post_params)","    @post.user = current_user","    if @post.save","      redirect_to @group ? group_path(@group) : post_path(@post), notice: '投稿が作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @post.update(post_params)","      if @group","        redirect_to group_path(@group), notice: '投稿が更新されました。'","      else","        redirect_to post_path(@post), notice: '投稿が更新されました。'","      end","    else","      render :edit","    end","  end","","  def destroy","    @post.destroy","    redirect_to root_path, notice: '投稿が削除されました。'","  end","","  private","","  def set_post","    @post = Post.find(params[:id])","  rescue ActiveRecord::RecordNotFound","    redirect_to root_path, alert: '投稿が見つかりませんでした。'","  end","","  def set_group","    @group = Group.find(params[:group_id]) if params[:group_id].present?","  rescue ActiveRecord::RecordNotFound","    @group = nil","    redirect_to groups_path, alert: 'グループが見つかりません。' if params[:group_id].present?","  end","","  def post_params","    params.require(:post).permit(:title, :content, :group_id, images: [])","  end","end",""],"id":1974}],[{"start":{"row":0,"column":0},"end":{"row":67,"column":0},"action":"insert","lines":["class PostsController < ApplicationController","  before_action :set_post, only: [:show, :edit, :update, :destroy, :toggle_like]","  before_action :set_group, only: [:new, :create, :edit, :update]","","  def index","    if params[:user_id].present?","      @user = User.find(params[:user_id])","      @posts = @user.posts.order(created_at: :desc).page(params[:page]).per(8)","    else","      @posts = current_user.posts.order(created_at: :desc).page(params[:page]).per(8)","    end","  end","  ","  def show","  end","","  def new","    @post = @group ? @group.posts.build : Post.new","  end","","  def create","    @post = @group ? @group.posts.build(post_params) : Post.new(post_params)","    @post.user = current_user","    if @post.save","      redirect_to @group ? group_path(@group) : post_path(@post), notice: '投稿が作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @post.update(post_params)","      if @group","        redirect_to group_path(@group), notice: '投稿が更新されました。'","      else","        redirect_to post_path(@post), notice: '投稿が更新されました。'","      end","    else","      render :edit","    end","  end","","  def destroy","    @post.destroy","    redirect_to root_path, notice: '投稿が削除されました。'","  end","","  private","","  def set_post","    @post = Post.find(params[:id])","  end","","  def set_group","    @group = Group.find(params[:group_id]) if params[:group_id].present?","  rescue ActiveRecord::RecordNotFound","    @group = nil","    redirect_to groups_path, alert: 'グループが見つかりません。' if params[:group_id].present?","  end","","  def post_params","    params.require(:post).permit(:title, :content, :group_id, images: [])","  end","end",""],"id":1975}],[{"start":{"row":0,"column":0},"end":{"row":67,"column":0},"action":"remove","lines":["class PostsController < ApplicationController","  before_action :set_post, only: [:show, :edit, :update, :destroy, :toggle_like]","  before_action :set_group, only: [:new, :create, :edit, :update]","","  def index","    if params[:user_id].present?","      @user = User.find(params[:user_id])","      @posts = @user.posts.order(created_at: :desc).page(params[:page]).per(8)","    else","      @posts = current_user.posts.order(created_at: :desc).page(params[:page]).per(8)","    end","  end","  ","  def show","  end","","  def new","    @post = @group ? @group.posts.build : Post.new","  end","","  def create","    @post = @group ? @group.posts.build(post_params) : Post.new(post_params)","    @post.user = current_user","    if @post.save","      redirect_to @group ? group_path(@group) : post_path(@post), notice: '投稿が作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @post.update(post_params)","      if @group","        redirect_to group_path(@group), notice: '投稿が更新されました。'","      else","        redirect_to post_path(@post), notice: '投稿が更新されました。'","      end","    else","      render :edit","    end","  end","","  def destroy","    @post.destroy","    redirect_to root_path, notice: '投稿が削除されました。'","  end","","  private","","  def set_post","    @post = Post.find(params[:id])","  end","","  def set_group","    @group = Group.find(params[:group_id]) if params[:group_id].present?","  rescue ActiveRecord::RecordNotFound","    @group = nil","    redirect_to groups_path, alert: 'グループが見つかりません。' if params[:group_id].present?","  end","","  def post_params","    params.require(:post).permit(:title, :content, :group_id, images: [])","  end","end",""],"id":1976}],[{"start":{"row":0,"column":0},"end":{"row":63,"column":0},"action":"insert","lines":["class PostsController < ApplicationController","  before_action :authenticate_user!, only: [:new, :create, :edit, :update, :destroy]","  before_action :set_post, only: [:show, :edit, :update, :destroy, :toggle_like]","  before_action :set_group, only: [:new, :create, :edit, :update]","","  def index","    @posts = current_user.posts.order(created_at: :desc).page(params[:page]).per(8)","  end","  ","  def show","  end","","  def new","    @post = @group ? @group.posts.build : Post.new","  end","","  def create","    @post = @group ? @group.posts.build(post_params) : Post.new(post_params)","    @post.user = current_user","    if @post.save","      redirect_to @group ? group_path(@group) : post_path(@post), notice: '投稿が作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @post.update(post_params)","      if @group","        redirect_to group_path(@group), notice: '投稿が更新されました。'","      else","        redirect_to post_path(@post), notice: '投稿が更新されました。'","      end","    else","      render :edit","    end","  end","","  def destroy","    @post.destroy","    redirect_to root_path, notice: '投稿が削除されました。'","  end","","  private","","  def set_post","    @post = Post.find(params[:id])","  end","","  def set_group","    @group = Group.find(params[:group_id]) if params[:group_id].present?","  rescue ActiveRecord::RecordNotFound","    @group = nil","    redirect_to groups_path, alert: 'グループが見つかりません。' if params[:group_id].present?","  end","","  def post_params","    params.require(:post).permit(:title, :content, :group_id, images: [])","  end","end",""],"id":1977}],[{"start":{"row":0,"column":0},"end":{"row":63,"column":0},"action":"remove","lines":["class PostsController < ApplicationController","  before_action :authenticate_user!, only: [:new, :create, :edit, :update, :destroy]","  before_action :set_post, only: [:show, :edit, :update, :destroy, :toggle_like]","  before_action :set_group, only: [:new, :create, :edit, :update]","","  def index","    @posts = current_user.posts.order(created_at: :desc).page(params[:page]).per(8)","  end","  ","  def show","  end","","  def new","    @post = @group ? @group.posts.build : Post.new","  end","","  def create","    @post = @group ? @group.posts.build(post_params) : Post.new(post_params)","    @post.user = current_user","    if @post.save","      redirect_to @group ? group_path(@group) : post_path(@post), notice: '投稿が作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @post.update(post_params)","      if @group","        redirect_to group_path(@group), notice: '投稿が更新されました。'","      else","        redirect_to post_path(@post), notice: '投稿が更新されました。'","      end","    else","      render :edit","    end","  end","","  def destroy","    @post.destroy","    redirect_to root_path, notice: '投稿が削除されました。'","  end","","  private","","  def set_post","    @post = Post.find(params[:id])","  end","","  def set_group","    @group = Group.find(params[:group_id]) if params[:group_id].present?","  rescue ActiveRecord::RecordNotFound","    @group = nil","    redirect_to groups_path, alert: 'グループが見つかりません。' if params[:group_id].present?","  end","","  def post_params","    params.require(:post).permit(:title, :content, :group_id, images: [])","  end","end",""],"id":1978}],[{"start":{"row":0,"column":0},"end":{"row":68,"column":0},"action":"insert","lines":["class PostsController < ApplicationController","  before_action :authenticate_user!, except: [:show, :index]","  before_action :set_post, only: [:show, :edit, :update, :destroy, :toggle_like]","  before_action :set_group, only: [:new, :create, :edit, :update]","","  def index","    if params[:user_id]","      @user = User.find(params[:user_id])","      @posts = @user.posts.order(created_at: :desc).page(params[:page]).per(8)","    else","      @posts = current_user.posts.order(created_at: :desc).page(params[:page]).per(8)","    end","  end","  ","  def show","  end","","  def new","    @post = @group ? @group.posts.build : Post.new","  end","","  def create","    @post = @group ? @group.posts.build(post_params) : Post.new(post_params)","    @post.user = current_user","    if @post.save","      redirect_to @group ? group_path(@group) : post_path(@post), notice: '投稿が作成されました。'","    else","      render :new","    end","  end","","  def edit","  end","","  def update","    if @post.update(post_params)","      if @group","        redirect_to group_path(@group), notice: '投稿が更新されました。'","      else","        redirect_to post_path(@post), notice: '投稿が更新されました。'","      end","    else","      render :edit","    end","  end","","  def destroy","    @post.destroy","    redirect_to root_path, notice: '投稿が削除されました。'","  end","","  private","","  def set_post","    @post = Post.find(params[:id])","  end","","  def set_group","    @group = Group.find(params[:group_id]) if params[:group_id].present?","  rescue ActiveRecord::RecordNotFound","    @group = nil","    redirect_to groups_path, alert: 'グループが見つかりません。' if params[:group_id].present?","  end","","  def post_params","    params.require(:post).permit(:title, :content, :group_id, images: [])","  end","end",""],"id":1979}]]},"timestamp":1719471855108}