{"filter":false,"title":"sessions_controller.rb","tooltip":"/nagano_cake/app/controllers/admin/sessions_controller.rb","ace":{"folds":[],"scrolltop":357,"scrollleft":0,"selection":{"start":{"row":31,"column":0},"end":{"row":31,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"hash":"ce26463b0c3f965587c0c2af6ca0a9fb6de600b1","undoManager":{"mark":32,"position":32,"stack":[[{"start":{"row":19,"column":0},"end":{"row":22,"column":29},"action":"remove","lines":["<<<<<<< HEAD","","=======",">>>>>>> origin/takeshiumemoto"],"id":2}],[{"start":{"row":0,"column":0},"end":{"row":28,"column":0},"action":"remove","lines":["# frozen_string_literal: true","","class Admin::SessionsController < Devise::SessionsController","  # before_action :configure_sign_in_params, only: [:create]","","  # GET /resource/sign_in","  def new","    super","  end","","  # POST /resource/sign_in","  def create","    super","  end","","  # DELETE /resource/sign_out","  def destroy","    super","  end","","","  # protected","","  # If you have extra params to permit, append them to the sanitizer.","  # def configure_sign_in_params","  #   devise_parameter_sanitizer.permit(:sign_in, keys: [:attribute])","  # end","end",""],"id":3}],[{"start":{"row":0,"column":0},"end":{"row":53,"column":0},"action":"insert","lines":["# frozen_string_literal: true","","class Public::SessionsController < Devise::SessionsController","  before_action :configure_permitted_parameters, if: :devise_controller?","  before_action :customer_state, only: [:create]","","  # GET /resource/sign_in","  def new","    super","  end","","  # POST /resource/sign_in","  def create","    super","  end","","  # DELETE /resource/sign_out","  def destroy","    super","  end","","  protected","","  def after_sign_in_path_for(resource)","    my_page_customer_path","  end","","  def after_sign_out_path_for(resource)","    root_path","  end","","  private","  # アクティブであるかを判断するメソッド","  def customer_state","    # 【処理内容1】 入力されたemailからアカウントを1件取得","    customer = Customer.find_by(email: params[:customer][:email])","    # 【処理内容2】 アカウントを取得できなかった場合、このメソッドを終了する","    return if customer.nil?","    # 【処理内容3】 取得したアカウントのパスワードと入力されたパスワードが一致していない場合、このメソッドを終了する","    return unless customer.valid_password?(params[:customer][:password])","    # 【処理内容4】 アクティブでない会員に対する処理","    if customer.is_active == false","      redirect_to new_customer_registration_path","    end","  end","","  def configure_permitted_parameters","    devise_parameter_sanitizer.permit(:sign_up, keys: [","      :first_name, :last_name, :first_name_kana, :last_name_kana, ","      :postal_code, :address, :telephone_number, :email, :password, :password_confirmation","    ])","  end","end",""],"id":4}],[{"start":{"row":0,"column":0},"end":{"row":53,"column":0},"action":"remove","lines":["# frozen_string_literal: true","","class Public::SessionsController < Devise::SessionsController","  before_action :configure_permitted_parameters, if: :devise_controller?","  before_action :customer_state, only: [:create]","","  # GET /resource/sign_in","  def new","    super","  end","","  # POST /resource/sign_in","  def create","    super","  end","","  # DELETE /resource/sign_out","  def destroy","    super","  end","","  protected","","  def after_sign_in_path_for(resource)","    my_page_customer_path","  end","","  def after_sign_out_path_for(resource)","    root_path","  end","","  private","  # アクティブであるかを判断するメソッド","  def customer_state","    # 【処理内容1】 入力されたemailからアカウントを1件取得","    customer = Customer.find_by(email: params[:customer][:email])","    # 【処理内容2】 アカウントを取得できなかった場合、このメソッドを終了する","    return if customer.nil?","    # 【処理内容3】 取得したアカウントのパスワードと入力されたパスワードが一致していない場合、このメソッドを終了する","    return unless customer.valid_password?(params[:customer][:password])","    # 【処理内容4】 アクティブでない会員に対する処理","    if customer.is_active == false","      redirect_to new_customer_registration_path","    end","  end","","  def configure_permitted_parameters","    devise_parameter_sanitizer.permit(:sign_up, keys: [","      :first_name, :last_name, :first_name_kana, :last_name_kana, ","      :postal_code, :address, :telephone_number, :email, :password, :password_confirmation","    ])","  end","end",""],"id":5}],[{"start":{"row":0,"column":0},"end":{"row":53,"column":0},"action":"insert","lines":["# frozen_string_literal: true","","class Public::SessionsController < Devise::SessionsController","  before_action :configure_permitted_parameters, if: :devise_controller?","  before_action :customer_state, only: [:create]","","  # GET /resource/sign_in","  def new","    super","  end","","  # POST /resource/sign_in","  def create","    super","  end","","  # DELETE /resource/sign_out","  def destroy","    super","  end","","  protected","","  def after_sign_in_path_for(resource)","    my_page_customer_path","  end","","  def after_sign_out_path_for(resource)","    root_path","  end","","  private","  # アクティブであるかを判断するメソッド","  def customer_state","    # 【処理内容1】 入力されたemailからアカウントを1件取得","    customer = Customer.find_by(email: params[:customer][:email])","    # 【処理内容2】 アカウントを取得できなかった場合、このメソッドを終了する","    return if customer.nil?","    # 【処理内容3】 取得したアカウントのパスワードと入力されたパスワードが一致していない場合、このメソッドを終了する","    return unless customer.valid_password?(params[:customer][:password])","    # 【処理内容4】 アクティブでない会員に対する処理","    if customer.is_active == false","      redirect_to new_customer_registration_path","    end","  end","","  def configure_permitted_parameters","    devise_parameter_sanitizer.permit(:sign_up, keys: [","      :first_name, :last_name, :first_name_kana, :last_name_kana, ","      :postal_code, :address, :telephone_number, :email, :password, :password_confirmation","    ])","  end","end",""],"id":6}],[{"start":{"row":0,"column":0},"end":{"row":53,"column":0},"action":"remove","lines":["# frozen_string_literal: true","","class Public::SessionsController < Devise::SessionsController","  before_action :configure_permitted_parameters, if: :devise_controller?","  before_action :customer_state, only: [:create]","","  # GET /resource/sign_in","  def new","    super","  end","","  # POST /resource/sign_in","  def create","    super","  end","","  # DELETE /resource/sign_out","  def destroy","    super","  end","","  protected","","  def after_sign_in_path_for(resource)","    my_page_customer_path","  end","","  def after_sign_out_path_for(resource)","    root_path","  end","","  private","  # アクティブであるかを判断するメソッド","  def customer_state","    # 【処理内容1】 入力されたemailからアカウントを1件取得","    customer = Customer.find_by(email: params[:customer][:email])","    # 【処理内容2】 アカウントを取得できなかった場合、このメソッドを終了する","    return if customer.nil?","    # 【処理内容3】 取得したアカウントのパスワードと入力されたパスワードが一致していない場合、このメソッドを終了する","    return unless customer.valid_password?(params[:customer][:password])","    # 【処理内容4】 アクティブでない会員に対する処理","    if customer.is_active == false","      redirect_to new_customer_registration_path","    end","  end","","  def configure_permitted_parameters","    devise_parameter_sanitizer.permit(:sign_up, keys: [","      :first_name, :last_name, :first_name_kana, :last_name_kana, ","      :postal_code, :address, :telephone_number, :email, :password, :password_confirmation","    ])","  end","end",""],"id":7}],[{"start":{"row":0,"column":0},"end":{"row":54,"column":6},"action":"insert","lines":["# frozen_string_literal: true","","class Public::SessionsController < Devise::SessionsController","  before_action :configure_permitted_parameters, if: :devise_controller?","  before_action :customer_state, only: [:create]","  # before_action :configure_sign_in_params, only: [:create]","","  # GET /resource/sign_in","  def new","    super","  end","","  # POST /resource/sign_in","  def create","    super","  end","","  # DELETE /resource/sign_out","  def destroy","    super","  end","","  protected","  ","  def after_sign_in_path_for(resource)","    my_page_customer_path","  end","  ","  def after_sign_out_path_for(resource)","    root_path","  end","  ","  private","  # アクティブであるかを判断するメソッド","  def customer_state","  # 【処理内容1】 入力されたemailからアカウントを1件取得","  customer = Customer.find_by(email: params[:customer][:email])","  # 【処理内容2】 アカウントを取得できなかった場合、このメソッドを終了する","  return if customer.nil?","  # 【処理内容3】 取得したアカウントのパスワードと入力されたパスワードが一致していない場合、このメソッドを終了する","  return unless customer.valid_password?(params[:customer][:password])","  # 【処理内容4】 アクティブでない会員に対する処理","  return unless customer.is_active == false","  redirect_to new_customer_registration_path","  end","  ","  protected ","  ","    def configure_permitted_parameters","    devise_parameter_sanitizer.permit(:sign_up, keys: [","      :first_name, :last_name, :first_name_kana, :last_name_kana, ","      :postal_code, :address, :telephone_number, :email, :password, :password_confirmation","    ])","    end","end   "],"id":8}],[{"start":{"row":0,"column":0},"end":{"row":54,"column":6},"action":"remove","lines":["# frozen_string_literal: true","","class Public::SessionsController < Devise::SessionsController","  before_action :configure_permitted_parameters, if: :devise_controller?","  before_action :customer_state, only: [:create]","  # before_action :configure_sign_in_params, only: [:create]","","  # GET /resource/sign_in","  def new","    super","  end","","  # POST /resource/sign_in","  def create","    super","  end","","  # DELETE /resource/sign_out","  def destroy","    super","  end","","  protected","  ","  def after_sign_in_path_for(resource)","    my_page_customer_path","  end","  ","  def after_sign_out_path_for(resource)","    root_path","  end","  ","  private","  # アクティブであるかを判断するメソッド","  def customer_state","  # 【処理内容1】 入力されたemailからアカウントを1件取得","  customer = Customer.find_by(email: params[:customer][:email])","  # 【処理内容2】 アカウントを取得できなかった場合、このメソッドを終了する","  return if customer.nil?","  # 【処理内容3】 取得したアカウントのパスワードと入力されたパスワードが一致していない場合、このメソッドを終了する","  return unless customer.valid_password?(params[:customer][:password])","  # 【処理内容4】 アクティブでない会員に対する処理","  return unless customer.is_active == false","  redirect_to new_customer_registration_path","  end","  ","  protected ","  ","    def configure_permitted_parameters","    devise_parameter_sanitizer.permit(:sign_up, keys: [","      :first_name, :last_name, :first_name_kana, :last_name_kana, ","      :postal_code, :address, :telephone_number, :email, :password, :password_confirmation","    ])","    end","end   "],"id":9}],[{"start":{"row":0,"column":0},"end":{"row":54,"column":6},"action":"insert","lines":["# frozen_string_literal: true","","class Public::SessionsController < Devise::SessionsController","  before_action :configure_permitted_parameters, if: :devise_controller?","  before_action :customer_state, only: [:create]","  # before_action :configure_sign_in_params, only: [:create]","","  # GET /resource/sign_in","  def new","    super","  end","","  # POST /resource/sign_in","  def create","    super","  end","","  # DELETE /resource/sign_out","  def destroy","    super","  end","","  protected","  ","  def after_sign_in_path_for(resource)","    customer_my_page_path","  end","  ","  def after_sign_out_path_for(resource)","    root_path","  end","  ","  private","  # アクティブであるかを判断するメソッド","  def customer_state","  # 【処理内容1】 入力されたemailからアカウントを1件取得","  customer = Customer.find_by(email: params[:customer][:email])","  # 【処理内容2】 アカウントを取得できなかった場合、このメソッドを終了する","  return if customer.nil?","  # 【処理内容3】 取得したアカウントのパスワードと入力されたパスワードが一致していない場合、このメソッドを終了する","  return unless customer.valid_password?(params[:customer][:password])","  # 【処理内容4】 アクティブでない会員に対する処理","  return unless customer.is_active == false","  redirect_to new_customer_registration_path","  end","  ","  protected ","  ","    def configure_permitted_parameters","    devise_parameter_sanitizer.permit(:sign_up, keys: [","      :first_name, :last_name, :first_name_kana, :last_name_kana, ","      :postal_code, :address, :telephone_number, :email, :password, :password_confirmation","    ])","    end","end   "],"id":10}],[{"start":{"row":23,"column":0},"end":{"row":23,"column":2},"action":"remove","lines":["  "],"id":11},{"start":{"row":27,"column":0},"end":{"row":27,"column":2},"action":"remove","lines":["  "]},{"start":{"row":31,"column":0},"end":{"row":31,"column":2},"action":"remove","lines":["  "]},{"start":{"row":45,"column":0},"end":{"row":45,"column":2},"action":"remove","lines":["  "]},{"start":{"row":46,"column":11},"end":{"row":46,"column":12},"action":"remove","lines":[" "]},{"start":{"row":47,"column":0},"end":{"row":47,"column":2},"action":"remove","lines":["  "]},{"start":{"row":50,"column":65},"end":{"row":50,"column":66},"action":"remove","lines":[" "]},{"start":{"row":54,"column":3},"end":{"row":54,"column":6},"action":"remove","lines":["   "]}],[{"start":{"row":0,"column":0},"end":{"row":54,"column":3},"action":"remove","lines":["# frozen_string_literal: true","","class Public::SessionsController < Devise::SessionsController","  before_action :configure_permitted_parameters, if: :devise_controller?","  before_action :customer_state, only: [:create]","  # before_action :configure_sign_in_params, only: [:create]","","  # GET /resource/sign_in","  def new","    super","  end","","  # POST /resource/sign_in","  def create","    super","  end","","  # DELETE /resource/sign_out","  def destroy","    super","  end","","  protected","","  def after_sign_in_path_for(resource)","    customer_my_page_path","  end","","  def after_sign_out_path_for(resource)","    root_path","  end","","  private","  # アクティブであるかを判断するメソッド","  def customer_state","  # 【処理内容1】 入力されたemailからアカウントを1件取得","  customer = Customer.find_by(email: params[:customer][:email])","  # 【処理内容2】 アカウントを取得できなかった場合、このメソッドを終了する","  return if customer.nil?","  # 【処理内容3】 取得したアカウントのパスワードと入力されたパスワードが一致していない場合、このメソッドを終了する","  return unless customer.valid_password?(params[:customer][:password])","  # 【処理内容4】 アクティブでない会員に対する処理","  return unless customer.is_active == false","  redirect_to new_customer_registration_path","  end","","  protected","","    def configure_permitted_parameters","    devise_parameter_sanitizer.permit(:sign_up, keys: [","      :first_name, :last_name, :first_name_kana, :last_name_kana,","      :postal_code, :address, :telephone_number, :email, :password, :password_confirmation","    ])","    end","end"],"id":12}],[{"start":{"row":0,"column":0},"end":{"row":54,"column":0},"action":"insert","lines":["# frozen_string_literal: true","","class Public::SessionsController < Devise::SessionsController","  before_action :configure_permitted_parameters, if: :devise_controller?","  before_action :customer_state, only: [:create]","","  # GET /resource/sign_in","  def new","    super","  end","","  # POST /resource/sign_in","  def create","    super","  end","","  # DELETE /resource/sign_out","  def destroy","    super","  end","","  protected","","  def after_sign_in_path_for(resource)","    my_page_customer_path","  end","","  def after_sign_out_path_for(resource)","    root_path","  end","","  private","","  # アクティブであるかを判断するメソッド","  def customer_state","    # 【処理内容1】 入力されたemailからアカウントを1件取得","    customer = Customer.find_by(email: params[:customer][:email])","    # 【処理内容2】 アカウントを取得できなかった場合、このメソッドを終了する","    return if customer.nil?","    # 【処理内容3】 取得したアカウントのパスワードと入力されたパスワードが一致していない場合、このメソッドを終了する","    return unless customer.valid_password?(params[:customer][:password])","    # 【処理内容4】 アクティブでない会員に対する処理","    if customer.is_active == false","      redirect_to new_customer_registration_path","    end","  end","","  def configure_permitted_parameters","    devise_parameter_sanitizer.permit(:sign_up, keys: [","      :first_name, :last_name, :first_name_kana, :last_name_kana, ","      :postal_code, :address, :telephone_number, :email, :password, :password_confirmation","    ])","  end","end",""],"id":13}],[{"start":{"row":49,"column":65},"end":{"row":49,"column":66},"action":"remove","lines":[" "],"id":14}],[{"start":{"row":0,"column":0},"end":{"row":54,"column":0},"action":"remove","lines":["# frozen_string_literal: true","","class Public::SessionsController < Devise::SessionsController","  before_action :configure_permitted_parameters, if: :devise_controller?","  before_action :customer_state, only: [:create]","","  # GET /resource/sign_in","  def new","    super","  end","","  # POST /resource/sign_in","  def create","    super","  end","","  # DELETE /resource/sign_out","  def destroy","    super","  end","","  protected","","  def after_sign_in_path_for(resource)","    my_page_customer_path","  end","","  def after_sign_out_path_for(resource)","    root_path","  end","","  private","","  # アクティブであるかを判断するメソッド","  def customer_state","    # 【処理内容1】 入力されたemailからアカウントを1件取得","    customer = Customer.find_by(email: params[:customer][:email])","    # 【処理内容2】 アカウントを取得できなかった場合、このメソッドを終了する","    return if customer.nil?","    # 【処理内容3】 取得したアカウントのパスワードと入力されたパスワードが一致していない場合、このメソッドを終了する","    return unless customer.valid_password?(params[:customer][:password])","    # 【処理内容4】 アクティブでない会員に対する処理","    if customer.is_active == false","      redirect_to new_customer_registration_path","    end","  end","","  def configure_permitted_parameters","    devise_parameter_sanitizer.permit(:sign_up, keys: [","      :first_name, :last_name, :first_name_kana, :last_name_kana,","      :postal_code, :address, :telephone_number, :email, :password, :password_confirmation","    ])","  end","end",""],"id":15}],[{"start":{"row":0,"column":0},"end":{"row":27,"column":3},"action":"insert","lines":["# frozen_string_literal: true","","class Admin::SessionsController < Devise::SessionsController","  # before_action :configure_sign_in_params, only: [:create]","","  # GET /resource/sign_in","  def new","    super","  end","","  # POST /resource/sign_in","  def create","    super","  end","","  # DELETE /resource/sign_out","  def destroy","    super","  end","","","  # protected","","  # If you have extra params to permit, append them to the sanitizer.","  # def configure_sign_in_params","  #   devise_parameter_sanitizer.permit(:sign_in, keys: [:attribute])","  # end","end"],"id":16}],[{"start":{"row":0,"column":0},"end":{"row":27,"column":3},"action":"remove","lines":["# frozen_string_literal: true","","class Admin::SessionsController < Devise::SessionsController","  # before_action :configure_sign_in_params, only: [:create]","","  # GET /resource/sign_in","  def new","    super","  end","","  # POST /resource/sign_in","  def create","    super","  end","","  # DELETE /resource/sign_out","  def destroy","    super","  end","","","  # protected","","  # If you have extra params to permit, append them to the sanitizer.","  # def configure_sign_in_params","  #   devise_parameter_sanitizer.permit(:sign_in, keys: [:attribute])","  # end","end"],"id":17}],[{"start":{"row":0,"column":0},"end":{"row":27,"column":3},"action":"insert","lines":["# frozen_string_literal: true","","class Admin::SessionsController < Devise::SessionsController","  # before_action :configure_sign_in_params, only: [:create]","","  # GET /resource/sign_in","  def new","    super","  end","","  # POST /resource/sign_in","  def create","    super","  end","","  # DELETE /resource/sign_out","  def destroy","    super","  end","","","  # protected","","  # If you have extra params to permit, append them to the sanitizer.","  # def configure_sign_in_params","  #   devise_parameter_sanitizer.permit(:sign_in, keys: [:attribute])","  # end","end"],"id":18}],[{"start":{"row":0,"column":0},"end":{"row":27,"column":3},"action":"remove","lines":["# frozen_string_literal: true","","class Admin::SessionsController < Devise::SessionsController","  # before_action :configure_sign_in_params, only: [:create]","","  # GET /resource/sign_in","  def new","    super","  end","","  # POST /resource/sign_in","  def create","    super","  end","","  # DELETE /resource/sign_out","  def destroy","    super","  end","","","  # protected","","  # If you have extra params to permit, append them to the sanitizer.","  # def configure_sign_in_params","  #   devise_parameter_sanitizer.permit(:sign_in, keys: [:attribute])","  # end","end"],"id":19}],[{"start":{"row":0,"column":0},"end":{"row":27,"column":3},"action":"insert","lines":["# frozen_string_literal: true","","class Admin::SessionsController < Devise::SessionsController","  # before_action :configure_sign_in_params, only: [:create]","","  # GET /resource/sign_in","  def new","    super","  end","","  # POST /resource/sign_in","  def create","    super","  end","","  # DELETE /resource/sign_out","  def destroy","    super","  end","","","  # protected","","  # If you have extra params to permit, append them to the sanitizer.","  # def configure_sign_in_params","  #   devise_parameter_sanitizer.permit(:sign_in, keys: [:attribute])","  # end","end"],"id":20}],[{"start":{"row":0,"column":0},"end":{"row":27,"column":3},"action":"remove","lines":["# frozen_string_literal: true","","class Admin::SessionsController < Devise::SessionsController","  # before_action :configure_sign_in_params, only: [:create]","","  # GET /resource/sign_in","  def new","    super","  end","","  # POST /resource/sign_in","  def create","    super","  end","","  # DELETE /resource/sign_out","  def destroy","    super","  end","","","  # protected","","  # If you have extra params to permit, append them to the sanitizer.","  # def configure_sign_in_params","  #   devise_parameter_sanitizer.permit(:sign_in, keys: [:attribute])","  # end","end"],"id":21}],[{"start":{"row":0,"column":0},"end":{"row":28,"column":3},"action":"insert","lines":["class Admin::SessionsController < Devise::SessionsController","  # before_action :configure_sign_in_params, only: [:create]","","  # GET /resource/sign_in","  def new","    super","  end","","  # POST /resource/sign_in","  def create","    super","  end","","  # DELETE /resource/sign_out","  def destroy","    super","  end","","  def after_sign_out_path_for(resource_or_scope)","    admin_session_path","  end","  ","  # protected","","  # If you have extra params to permit, append them to the sanitizer.","  # def configure_sign_in_params","  #   devise_parameter_sanitizer.permit(:sign_in, keys: [:attribute])","  # end","end"],"id":22}],[{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["# frozen_string_literal: true","",""],"id":27,"ignore":true},{"start":{"row":20,"column":0},"end":{"row":23,"column":2},"action":"remove","lines":["  def after_sign_out_path_for(resource_or_scope)","    admin_session_path","  end","  "]},{"start":{"row":27,"column":3},"end":{"row":28,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"remove","lines":["# frozen_string_literal: true","",""],"id":28,"ignore":true},{"start":{"row":19,"column":0},"end":{"row":23,"column":0},"action":"insert","lines":["  def after_sign_out_path_for(resource_or_scope)","    admin_session_path","  end","  ",""]},{"start":{"row":29,"column":3},"end":{"row":30,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":18,"column":0},"end":{"row":19,"column":0},"action":"remove","lines":["",""],"id":29,"ignore":true}],[{"start":{"row":16,"column":5},"end":{"row":20,"column":22},"action":"insert","lines":["","<<<<<<< HEAD","=======","",">>>>>>> origin/develop"],"id":30,"ignore":true}],[{"start":{"row":17,"column":0},"end":{"row":20,"column":22},"action":"remove","lines":["<<<<<<< HEAD","=======","",">>>>>>> origin/develop"],"id":31}],[{"start":{"row":1,"column":2},"end":{"row":1,"column":3},"action":"remove","lines":["#"],"id":32}],[{"start":{"row":0,"column":0},"end":{"row":29,"column":3},"action":"remove","lines":["class Admin::SessionsController < Devise::SessionsController","   before_action :configure_sign_in_params, only: [:create]","","  # GET /resource/sign_in","  def new","    super","  end","","  # POST /resource/sign_in","  def create","    super","  end","","  # DELETE /resource/sign_out","  def destroy","    super","  end","","","  def after_sign_out_path_for(resource_or_scope)","    admin_session_path","  end","  ","  # protected","","  # If you have extra params to permit, append them to the sanitizer.","  # def configure_sign_in_params","  #   devise_parameter_sanitizer.permit(:sign_in, keys: [:attribute])","  # end","end"],"id":33}],[{"start":{"row":0,"column":0},"end":{"row":26,"column":0},"action":"insert","lines":["# app/controllers/admin/sessions_controller.rb","class Admin::SessionsController < Devise::SessionsController","  # before_action :configure_sign_in_params, only: [:create]","","  # GET /resource/sign_in","  def new","    super","  end","","  # POST /resource/sign_in","  def create","    super","  end","","  # DELETE /resource/sign_out","  def destroy","    super","  end","","  # protected","","  # If you have extra params to permit, append them to the sanitizer.","  # def configure_sign_in_params","  #   devise_parameter_sanitizer.permit(:sign_in, keys: [:attribute])","  # end","end",""],"id":34}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"remove","lines":["# app/controllers/admin/sessions_controller.rb",""],"id":35,"ignore":true},{"start":{"row":18,"column":0},"end":{"row":23,"column":0},"action":"insert","lines":["","  def after_sign_out_path_for(resource_or_scope)","    admin_session_path","  end","  ",""]},{"start":{"row":29,"column":3},"end":{"row":30,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["# app/controllers/admin/sessions_controller.rb",""],"id":36,"ignore":true},{"start":{"row":19,"column":0},"end":{"row":24,"column":0},"action":"remove","lines":["","  def after_sign_out_path_for(resource_or_scope)","    admin_session_path","  end","  ",""]},{"start":{"row":25,"column":3},"end":{"row":26,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":26,"column":0},"action":"remove","lines":["# app/controllers/admin/sessions_controller.rb","class Admin::SessionsController < Devise::SessionsController","  # before_action :configure_sign_in_params, only: [:create]","","  # GET /resource/sign_in","  def new","    super","  end","","  # POST /resource/sign_in","  def create","    super","  end","","  # DELETE /resource/sign_out","  def destroy","    super","  end","","  # protected","","  # If you have extra params to permit, append them to the sanitizer.","  # def configure_sign_in_params","  #   devise_parameter_sanitizer.permit(:sign_in, keys: [:attribute])","  # end","end",""],"id":37}],[{"start":{"row":0,"column":0},"end":{"row":31,"column":0},"action":"insert","lines":["# app/controllers/admin/sessions_controller.rb","class Admin::SessionsController < Devise::SessionsController","  # before_action :configure_sign_in_params, only: [:create]","","  # GET /resource/sign_in","  def new","    super","  end","","  # POST /resource/sign_in","  def create","    super","  end","","  # DELETE /resource/sign_out","  def destroy","    super","  end","","  protected","","  # 管理者ログイン後のリダイレクト先を設定","  def after_sign_in_path_for(resource)","    admin_root_path","  end","","  # If you have extra params to permit, append them to the sanitizer.","  # def configure_sign_in_params","  #   devise_parameter_sanitizer.permit(:sign_in, keys: [:attribute])","  # end","end",""],"id":38}]]},"timestamp":1716792406789}